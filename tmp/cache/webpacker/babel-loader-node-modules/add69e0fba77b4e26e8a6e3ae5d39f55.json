{"ast":null,"code":"var selectElement = document.querySelector('#bug_bug_type');\nselectElement.addEventListener('change', function (event) {\n  var inputValue = document.getElementById(\"bug_bug_type\").value;\n\n  if (inputValue == 'feature') {\n    var feature = ['new', 'started', 'completed'];\n    bug_status.options.length = 0;\n\n    for (i = 0; i < feature.length; i++) {\n      option = document.getElementById(\"bug_status\");\n      var option = document.createElement(\"option\");\n      option.innerHTML = feature[i];\n      bug_status.options.add(option);\n      debugger;\n    }\n  } else {\n    var bug = ['new', 'started', 'resolved'];\n    bug_status.options.length = 0;\n\n    for (i = 0; i < bug.length; i++) {\n      option = document.getElementById(\"bug_status\");\n      var option = document.createElement(\"option\");\n      option.innerHTML = bug[i];\n      bug_status.options.add(option);\n    }\n  }\n});","map":{"version":3,"sources":["/home/king/bugzila/app/javascript/packs/my_js.js"],"names":["selectElement","document","querySelector","addEventListener","event","inputValue","getElementById","value","feature","bug_status","options","length","i","option","createElement","innerHTML","add","bug"],"mappings":"AAAA,IAAMA,aAAa,GAAGC,QAAQ,CAACC,aAAT,CAAuB,eAAvB,CAAtB;AACEF,aAAa,CAACG,gBAAd,CAA+B,QAA/B,EAAyC,UAACC,KAAD,EAAW;AACpD,MAAIC,UAAU,GAAGJ,QAAQ,CAACK,cAAT,CAAwB,cAAxB,EAAwCC,KAAzD;;AACC,MAAIF,UAAU,IAAI,SAAlB,EAA6B;AAC5B,QAAIG,OAAO,GAAG,CAAC,KAAD,EAAQ,SAAR,EAAmB,WAAnB,CAAd;AACAC,IAAAA,UAAU,CAACC,OAAX,CAAmBC,MAAnB,GAA4B,CAA5B;;AACA,SAAKC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGJ,OAAO,CAACG,MAAxB,EAAgCC,CAAC,EAAjC,EAAqC;AACjCC,MAAAA,MAAM,GAAGZ,QAAQ,CAACK,cAAT,CAAwB,YAAxB,CAAT;AACA,UAAIO,MAAM,GAAGZ,QAAQ,CAACa,aAAT,CAAuB,QAAvB,CAAb;AACAD,MAAAA,MAAM,CAACE,SAAP,GAAmBP,OAAO,CAACI,CAAD,CAA1B;AACAH,MAAAA,UAAU,CAACC,OAAX,CAAmBM,GAAnB,CAAuBH,MAAvB;AACE;AACG;AACL,GAVL,MAWG;AACH,QAAII,GAAG,GAAG,CAAC,KAAD,EAAQ,SAAR,EAAmB,UAAnB,CAAV;AACAR,IAAAA,UAAU,CAACC,OAAX,CAAmBC,MAAnB,GAA4B,CAA5B;;AACA,SAAKC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGK,GAAG,CAACN,MAApB,EAA4BC,CAAC,EAA7B,EAAiC;AAC3BC,MAAAA,MAAM,GAAGZ,QAAQ,CAACK,cAAT,CAAwB,YAAxB,CAAT;AACD,UAAIO,MAAM,GAAGZ,QAAQ,CAACa,aAAT,CAAuB,QAAvB,CAAb;AACAD,MAAAA,MAAM,CAACE,SAAP,GAAmBE,GAAG,CAACL,CAAD,CAAtB;AACCH,MAAAA,UAAU,CAACC,OAAX,CAAmBM,GAAnB,CAAuBH,MAAvB;AACN;AACF;AAEA,CAxBC","sourcesContent":["const selectElement = document.querySelector('#bug_bug_type');\n  selectElement.addEventListener('change', (event) => {\n  var inputValue = document.getElementById(\"bug_bug_type\").value\n   if (inputValue == 'feature') {\n    var feature = ['new', 'started', 'completed'];\n    bug_status.options.length = 0;\n    for (i = 0; i < feature.length; i++) {\n        option = document.getElementById(\"bug_status\");\n        var option = document.createElement(\"option\");\n        option.innerHTML = feature[i];\n        bug_status.options.add(option);\n          debugger\n            } \n       }     \n else {\n   var bug = ['new', 'started', 'resolved'];\n   bug_status.options.length = 0;\n   for (i = 0; i < bug.length; i++) {\n         option = document.getElementById(\"bug_status\");\n        var option = document.createElement(\"option\");\n        option.innerHTML = bug[i];\n         bug_status.options.add(option);\n  }\n}\n\n});\n\n\n  "]},"metadata":{},"sourceType":"module"}
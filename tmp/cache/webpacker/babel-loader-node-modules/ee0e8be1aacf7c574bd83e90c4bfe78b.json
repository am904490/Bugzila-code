{"ast":null,"code":"var selectElement = document.querySelector('#bug_bug_type');\nselectElement.addEventListener('change', function (event) {\n  var inputValue = document.getElementById(\"bug_bug_type\").value;\n\n  if (inputValue == 'feature') {\n    //   const result = document.querySelector('#bug_status');\n    var feature = ['new', 'started', 'completed'];\n    bug_status.options.length = 0;\n    debugger;\n\n    for (i = 0; i < feature.length; i++) {\n      option.innerHTML = document.getElementById(\"bug_status\").value;\n      option.value = document.getElementById(\"bug_status\").value;\n      bug_status.options.add(option);\n    }\n  } else {\n    var bug = ['new', 'started', 'resolved'];\n    bug_status.options.length = 0;\n\n    for (i = 0; i < bug.length; i++) {\n      option.innerHTML = document.getElementById(\"bug_status\").value;\n      option.value = document.getElementById(\"bug_status\").value;\n      bug_status.options.add(option);\n    }\n  }\n});","map":{"version":3,"sources":["/home/king/bugzila/app/javascript/packs/my_js.js"],"names":["selectElement","document","querySelector","addEventListener","event","inputValue","getElementById","value","feature","bug_status","options","length","i","option","innerHTML","add","bug"],"mappings":"AAAA,IAAMA,aAAa,GAAGC,QAAQ,CAACC,aAAT,CAAuB,eAAvB,CAAtB;AAEAF,aAAa,CAACG,gBAAd,CAA+B,QAA/B,EAAyC,UAACC,KAAD,EAAW;AACjD,MAAIC,UAAU,GAAGJ,QAAQ,CAACK,cAAT,CAAwB,cAAxB,EAAwCC,KAAzD;;AAED,MAAIF,UAAU,IAAI,SAAlB,EAA6B;AAC9B;AACC,QAAIG,OAAO,GAAG,CAAC,KAAD,EAAQ,SAAR,EAAmB,WAAnB,CAAd;AACCC,IAAAA,UAAU,CAACC,OAAX,CAAmBC,MAAnB,GAA4B,CAA5B;AACC;;AACD,SAAKC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGJ,OAAO,CAACG,MAAxB,EAAgCC,CAAC,EAAjC,EAAqC;AAChCC,MAAAA,MAAM,CAACC,SAAP,GAAmBb,QAAQ,CAACK,cAAT,CAAwB,YAAxB,EAAsCC,KAAzD;AACAM,MAAAA,MAAM,CAACN,KAAP,GAAeN,QAAQ,CAACK,cAAT,CAAwB,YAAxB,EAAsCC,KAArD;AACAE,MAAAA,UAAU,CAACC,OAAX,CAAmBK,GAAnB,CAAuBF,MAAvB;AACK;AACL,GAVN,MAWI;AACH,QAAIG,GAAG,GAAG,CAAC,KAAD,EAAQ,SAAR,EAAmB,UAAnB,CAAV;AACAP,IAAAA,UAAU,CAACC,OAAX,CAAmBC,MAAnB,GAA4B,CAA5B;;AACA,SAAKC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGI,GAAG,CAACL,MAApB,EAA4BC,CAAC,EAA7B,EAAiC;AAC5BC,MAAAA,MAAM,CAACC,SAAP,GAAmBb,QAAQ,CAACK,cAAT,CAAwB,YAAxB,EAAsCC,KAAzD;AACAM,MAAAA,MAAM,CAACN,KAAP,GAAeN,QAAQ,CAACK,cAAT,CAAwB,YAAxB,EAAsCC,KAArD;AACCE,MAAAA,UAAU,CAACC,OAAX,CAAmBK,GAAnB,CAAuBF,MAAvB;AACN;AACF;AAEA,CAxBD","sourcesContent":["const selectElement = document.querySelector('#bug_bug_type');\n\nselectElement.addEventListener('change', (event) => {\n   var inputValue = document.getElementById(\"bug_bug_type\").value\n  \n  if (inputValue == 'feature') {\n //   const result = document.querySelector('#bug_status');\n  var feature = ['new', 'started', 'completed'];\n   bug_status.options.length = 0;\n    debugger\n   for (i = 0; i < feature.length; i++) {\n        option.innerHTML = document.getElementById(\"bug_status\").value;\n        option.value = document.getElementById(\"bug_status\").value;\n        bug_status.options.add(option);\n            } \n       }     \n else {\n   var bug = ['new', 'started', 'resolved'];\n   bug_status.options.length = 0;\n   for (i = 0; i < bug.length; i++) {\n        option.innerHTML = document.getElementById(\"bug_status\").value;\n        option.value = document.getElementById(\"bug_status\").value;\n         bug_status.options.add(option);\n  }\n}\n\n});\n\n\n  "]},"metadata":{},"sourceType":"module"}